---
import { getEntry } from "astro:content";
import SectionHeader from "@components/SectionHeader.astro";
import Layout from "../layouts/Layout.astro";
import CityCard from "@components/CityCard.astro";
import { getCollection } from "astro:content";
import Navbar from "@components/Navbar.astro";
import Footer from "@components/Footer.astro";
import { getSortedEvents } from "@utils/eventUtils";
import { getSortedNews } from "@utils/newsUtils";
import { getSortedResearch } from "@utils/researchUtils";
import ContentContainer from "@components/ContentContainer.astro";
import EventList from "@components/EventList.astro";
import NewsList from "@components/NewsList.astro";
import ResearchList from "@components/ResearchList.astro";
import "leaflet/dist/leaflet.css";

const { data: allCities } = await getEntry("city", "cities");
const allEvents = getSortedEvents(await getCollection("event"));
const allNews = getSortedNews(await getCollection("news"));
const allResearch = getSortedResearch(await getCollection("research"));
---

<Layout>
  <Navbar />
  <main>
    <div class="relative h-lvh">
      <div class="absolute top-0 left-0 right-0 bottom-0">
        <div class="h-[110lvh]" id="map"></div>
      </div>
      <div class="px-4 h-full flex items-center mx-auto max-w-6xl">
        <div class="w-96 z-[9998] text-white">
          <h1 class="text-7xl font-bold">Capitals of the future</h1>
          <p class="mt-8">
            The future of our cities. What's it going to be like?
          </p>
        </div>
      </div>
    </div>
    <ContentContainer
      class={allCities.length > 6 ? "z-[9998] md:pt-12" : " z-[9998] md:pt-6"}
    >
      <div
        class:list={[
          "min-h-lvh flex justify-center",
          { "items-center": allCities.length <= 6 },
        ]}
      >
        <div class="max-w-6xl w-full px-4">
          <SectionHeader title={`${allCities.length} cities`} />
          <p class="font-bold text-5xl">Many connections.</p>
          <div class="mt-14 grid grid-cols-1 md:grid-cols-3 gap-x-4 gap-y-7">
            {allCities.map((city) => <CityCard {...city} />)}
          </div>
        </div>
      </div>
      <div>
        <div
          class:list={[
            "max-w-6xl px-4 mx-auto mt-16",
            allCities.length > 6 ? "md:mt-16" : "md:mt-2",
          ]}
        >
          <EventList events={allEvents} />
          <ResearchList research={allResearch} />
          <NewsList news={allNews} />
        </div>
      </div>
    </ContentContainer>
  </main>
  <Footer />
</Layout>
<script>
  import * as L from "leaflet";

  // initialize the map on the "map" div with a given center and zoom
  const map = L.map("map", {
    zoomControl: false,
    scrollWheelZoom: false,
    dragging: false,
  }).setView([0.218, 98.728], 5);

  window.addEventListener("resize", function (_) {
    var width = document.documentElement.clientWidth;
    if (width < 968) {
      map.setView([0.218, 98.728]);
    } else {
      map.setView([0.218, 98.728]);
    }
  });

  var Stadia_AlidadeSmoothDark = L.tileLayer(
    "https://tiles.stadiamaps.com/tiles/alidade_smooth_dark/{z}/{x}/{y}{r}.{ext}",
    {
      minZoom: 0,
      maxZoom: 20,
      attribution:
        '&copy; <a href="https://www.stadiamaps.com/" target="_blank">Stadia Maps</a> &copy; <a href="https://openmaptiles.org/" target="_blank">OpenMapTiles</a> &copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors',
      // @ts-ignore
      ext: "png",
    }
  ).addTo(map);

  const singaporeMarker = L.marker([1.283333, 103.833333]).addTo(map);
  const nusantaraMarker = L.marker([-0.973056, 116.708611]).addTo(map);
  const putrajayaMarker = L.marker([2.93, 101.69]).addTo(map);
</script>
